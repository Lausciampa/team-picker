{"version":3,"sources":["Components/TeamScreen.js","App.js","index.js"],"names":["TeamScreen","_ref","teamA","arr","i","length","j","Math","floor","random","temp","shufflePlayers","finalPlayersList","teamB","splice","react_default","a","createElement","Fragment","className","map","player","index","key","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","name","players","handleChange","bind","assertThisInitialized","handleClick","e","input","currentTarget","setState","value","playersList","concat","toConsumableArray","_this2","react_router_dom","react_router","exact","path","render","onChange","type","required","placeholder","maxlength","size","onClick","to","Components_TeamScreen","Component","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.deaaad19.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport '../styles/css/main.css';\n\n\n\n// // Create a Fn to randomnize a given array:\nfunction shufflePlayers(arr) {\n\tlet i = arr.length - 1; //initial point in the arr: Last item\n\n\tfor ( i; i > 0; i-- ) {\t //it will iterate until i reaches 0, from last item to the first.\n\n\t    let j = Math.floor( Math.random() * (i + 1) );  //this generates a random number that will be multiplied by the current value of (i + 1), and Math.floor is applied to get an integer\n\n\t    let temp = arr[i];\n\t    arr[i] = arr[j];\n\t    arr[j] = temp;\n\t}\n\treturn arr;    \n};\n\n\n\nconst TeamScreen = ({ finalPlayersList }) => {\n\n    let teamA = shufflePlayers(finalPlayersList); //first half of the splited array\n    let teamB = teamA.splice(teamA.length/2); //second half (the chopped off one)\n\n\treturn (\n\n\t\t<React.Fragment>\n\n\t\t\t<div className=\"teamScreen-Container\">\n\n\t\t\t\t\n\t\t\t\t<div className=\"teamsContainer\">\n\t\t\t\t\t<h2>Team A</h2>\n\n\t\t\t\t\t<div className=\"players-Container\">\n\t\t\t\t\t\t<ol>\n\t\t\t\t\t\t\t{teamA.map( (player, index) => <li key = {index} >{player}</li> )}\n\t\t\t\t\t\t</ol>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\n\n\t\t\t\t<div className=\"teamsContainer\">\n\t\t\t\t\t<h2>Team B</h2>\n\t\t\t\t\t<div className=\"players-Container\">\n\t\t\t\t\t\t<ol>\n\t\t\t\t\t\t\t{teamB.map( (player, index) => <li key = {index} >{player}</li> )}\n\t\t\t\t\t\t</ol>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t\t\n\t\t</React.Fragment>\n\t);\n};\n\nexport default TeamScreen;\n\n\n\n","import React, { Component }  from 'react';\nimport TeamScreen from './Components/TeamScreen.js';\nimport './styles/css/main.css';\n\n\nimport { \n  BrowserRouter as Router, \n  Route, \n  Link, } from \"react-router-dom\";\n\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      name: \"\",\n      players: [],\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n  };\n\n\n\n  handleChange(e) {\n    let input = e.currentTarget;\n    this.setState({name: input.value});\n  };\n\n\n  handleClick() {\n    let playersList = [...this.state.players, this.state.name];\n    this.setState({players: playersList, name: \"\"});\n  };\n\n\n\n  render() {\n    return(\n\n      <Router>\n\n        <React.Fragment> \n\n          <Route exact path=\"/\" render = { () => (\n\n            <div className=\"home-mainContainer\">\n\n              <h1>Team Picker</h1>\n              <div className=\"home-formContainer\">\n\n                    <div className=\"home-formElementsContainer\">\n                    {this.state.players.length < 10 ? \n\n                      <div>\n                        <input \n                          onChange = {this.handleChange} \n                          value = {this.state.name} \n                          type = \"text\" required\n                          placeholder = \"Enter player's name\" \n                          maxlength = \"40\" \n                          size = \"25\"/> \n                        <br />\n                        <button onClick = {this.handleClick} className=\"button\">ADD PLAYER</button>\n                      </div> : <Link to=\"/teams\"><button className=\"button\">SHOW YOUR TEAMS</button></Link>\n\n                    }\n                    </div>\n\n                    {!this.state.players.length ? null :                     \n                      <ul>\n                        <div className=\"home-PlayersContainer\">\n                          {this.state.players.map( (player, index) => \n                          <li key = {index} >{player}</li>)}\n                        </div>\n                      </ul>\n                    }\n\n              </div>\n              \n\n            </div>\n          )} /> {/*Route exact path */}\n\n          <Route path=\"/teams\" render = { () => (\n            <TeamScreen finalPlayersList = {this.state.players} />\n\n          )} />\n\n        </React.Fragment>\n\n      </Router>\n\n    );\n  }\n\n\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}